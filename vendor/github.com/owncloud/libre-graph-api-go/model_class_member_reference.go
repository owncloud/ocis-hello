/*
Libre Graph API

Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.

API version: v1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package libregraph

import (
	"encoding/json"
)

// ClassMemberReference struct for ClassMemberReference
type ClassMemberReference struct {
	OdataId *string `json:"@odata.id,omitempty"`
}

// NewClassMemberReference instantiates a new ClassMemberReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClassMemberReference() *ClassMemberReference {
	this := ClassMemberReference{}
	return &this
}

// NewClassMemberReferenceWithDefaults instantiates a new ClassMemberReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClassMemberReferenceWithDefaults() *ClassMemberReference {
	this := ClassMemberReference{}
	return &this
}

// GetOdataId returns the OdataId field value if set, zero value otherwise.
func (o *ClassMemberReference) GetOdataId() string {
	if o == nil || o.OdataId == nil {
		var ret string
		return ret
	}
	return *o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClassMemberReference) GetOdataIdOk() (*string, bool) {
	if o == nil || o.OdataId == nil {
		return nil, false
	}
	return o.OdataId, true
}

// HasOdataId returns a boolean if a field has been set.
func (o *ClassMemberReference) HasOdataId() bool {
	if o != nil && o.OdataId != nil {
		return true
	}

	return false
}

// SetOdataId gets a reference to the given string and assigns it to the OdataId field.
func (o *ClassMemberReference) SetOdataId(v string) {
	o.OdataId = &v
}

func (o ClassMemberReference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OdataId != nil {
		toSerialize["@odata.id"] = o.OdataId
	}
	return json.Marshal(toSerialize)
}

type NullableClassMemberReference struct {
	value *ClassMemberReference
	isSet bool
}

func (v NullableClassMemberReference) Get() *ClassMemberReference {
	return v.value
}

func (v *NullableClassMemberReference) Set(val *ClassMemberReference) {
	v.value = val
	v.isSet = true
}

func (v NullableClassMemberReference) IsSet() bool {
	return v.isSet
}

func (v *NullableClassMemberReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClassMemberReference(val *ClassMemberReference) *NullableClassMemberReference {
	return &NullableClassMemberReference{value: val, isSet: true}
}

func (v NullableClassMemberReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClassMemberReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
