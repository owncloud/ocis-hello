// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/tx/v1beta1/tx_api.proto

package txv1beta1

import (
	context "context"
	fmt "fmt"
	v1beta11 "github.com/cs3org/go-cs3apis/cs3/rpc/v1beta1"
	v1beta12 "github.com/cs3org/go-cs3apis/cs3/sharing/ocm/v1beta1"
	v1beta1 "github.com/cs3org/go-cs3apis/cs3/types/v1beta1"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The filter type.
type ListTransfersRequest_Filter_Type int32

const (
	ListTransfersRequest_Filter_TYPE_INVALID  ListTransfersRequest_Filter_Type = 0
	ListTransfersRequest_Filter_TYPE_STATUS   ListTransfersRequest_Filter_Type = 1
	ListTransfersRequest_Filter_TYPE_SHARE_ID ListTransfersRequest_Filter_Type = 2
	ListTransfersRequest_Filter_TYPE_TX_ID    ListTransfersRequest_Filter_Type = 3
)

var ListTransfersRequest_Filter_Type_name = map[int32]string{
	0: "TYPE_INVALID",
	1: "TYPE_STATUS",
	2: "TYPE_SHARE_ID",
	3: "TYPE_TX_ID",
}

var ListTransfersRequest_Filter_Type_value = map[string]int32{
	"TYPE_INVALID":  0,
	"TYPE_STATUS":   1,
	"TYPE_SHARE_ID": 2,
	"TYPE_TX_ID":    3,
}

func (x ListTransfersRequest_Filter_Type) String() string {
	return proto.EnumName(ListTransfersRequest_Filter_Type_name, int32(x))
}

func (ListTransfersRequest_Filter_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{6, 0, 0}
}

type PullTransferRequest struct {
	// REQUIRED.
	// The source target URI. Should include at the minimum all the info needed to access the source.
	// https://golang.org/pkg/net/url/#URL provides a quick view of the format.
	SrcTargetUri string `protobuf:"bytes,1,opt,name=src_target_uri,json=srcTargetUri,proto3" json:"src_target_uri,omitempty"`
	// REQUIRED.
	// The destination target URI. Should include at the minimum all the info needed to access the destination.
	// https://golang.org/pkg/net/url/#URL provides a quick view of the format.
	DestTargetUri string `protobuf:"bytes,2,opt,name=dest_target_uri,json=destTargetUri,proto3" json:"dest_target_uri,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,3,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PullTransferRequest) Reset()         { *m = PullTransferRequest{} }
func (m *PullTransferRequest) String() string { return proto.CompactTextString(m) }
func (*PullTransferRequest) ProtoMessage()    {}
func (*PullTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{0}
}

func (m *PullTransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullTransferRequest.Unmarshal(m, b)
}
func (m *PullTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullTransferRequest.Marshal(b, m, deterministic)
}
func (m *PullTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullTransferRequest.Merge(m, src)
}
func (m *PullTransferRequest) XXX_Size() int {
	return xxx_messageInfo_PullTransferRequest.Size(m)
}
func (m *PullTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullTransferRequest proto.InternalMessageInfo

func (m *PullTransferRequest) GetSrcTargetUri() string {
	if m != nil {
		return m.SrcTargetUri
	}
	return ""
}

func (m *PullTransferRequest) GetDestTargetUri() string {
	if m != nil {
		return m.DestTargetUri
	}
	return ""
}

func (m *PullTransferRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type PullTransferResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta11.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// REQUIRED.
	// TxInfo, includes transfer id, status, description.
	TxInfo *TxInfo `protobuf:"bytes,2,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,3,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PullTransferResponse) Reset()         { *m = PullTransferResponse{} }
func (m *PullTransferResponse) String() string { return proto.CompactTextString(m) }
func (*PullTransferResponse) ProtoMessage()    {}
func (*PullTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{1}
}

func (m *PullTransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullTransferResponse.Unmarshal(m, b)
}
func (m *PullTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullTransferResponse.Marshal(b, m, deterministic)
}
func (m *PullTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullTransferResponse.Merge(m, src)
}
func (m *PullTransferResponse) XXX_Size() int {
	return xxx_messageInfo_PullTransferResponse.Size(m)
}
func (m *PullTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PullTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PullTransferResponse proto.InternalMessageInfo

func (m *PullTransferResponse) GetStatus() *v1beta11.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PullTransferResponse) GetTxInfo() *TxInfo {
	if m != nil {
		return m.TxInfo
	}
	return nil
}

func (m *PullTransferResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type GetTransferStatusRequest struct {
	// REQUIRED.
	// The transfer identifier.
	TxId *TxId `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetTransferStatusRequest) Reset()         { *m = GetTransferStatusRequest{} }
func (m *GetTransferStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransferStatusRequest) ProtoMessage()    {}
func (*GetTransferStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{2}
}

func (m *GetTransferStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransferStatusRequest.Unmarshal(m, b)
}
func (m *GetTransferStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransferStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetTransferStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransferStatusRequest.Merge(m, src)
}
func (m *GetTransferStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransferStatusRequest.Size(m)
}
func (m *GetTransferStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransferStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransferStatusRequest proto.InternalMessageInfo

func (m *GetTransferStatusRequest) GetTxId() *TxId {
	if m != nil {
		return m.TxId
	}
	return nil
}

func (m *GetTransferStatusRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type GetTransferStatusResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta11.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// REQUIRED.
	// TxInfo, includes ao. transfer id, status, description.
	TxInfo *TxInfo `protobuf:"bytes,2,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,3,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetTransferStatusResponse) Reset()         { *m = GetTransferStatusResponse{} }
func (m *GetTransferStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransferStatusResponse) ProtoMessage()    {}
func (*GetTransferStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{3}
}

func (m *GetTransferStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransferStatusResponse.Unmarshal(m, b)
}
func (m *GetTransferStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransferStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetTransferStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransferStatusResponse.Merge(m, src)
}
func (m *GetTransferStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransferStatusResponse.Size(m)
}
func (m *GetTransferStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransferStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransferStatusResponse proto.InternalMessageInfo

func (m *GetTransferStatusResponse) GetStatus() *v1beta11.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetTransferStatusResponse) GetTxInfo() *TxInfo {
	if m != nil {
		return m.TxInfo
	}
	return nil
}

func (m *GetTransferStatusResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type CancelTransferRequest struct {
	// REQUIRED.
	// The transfer identifier.
	TxId *TxId `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CancelTransferRequest) Reset()         { *m = CancelTransferRequest{} }
func (m *CancelTransferRequest) String() string { return proto.CompactTextString(m) }
func (*CancelTransferRequest) ProtoMessage()    {}
func (*CancelTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{4}
}

func (m *CancelTransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTransferRequest.Unmarshal(m, b)
}
func (m *CancelTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTransferRequest.Marshal(b, m, deterministic)
}
func (m *CancelTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTransferRequest.Merge(m, src)
}
func (m *CancelTransferRequest) XXX_Size() int {
	return xxx_messageInfo_CancelTransferRequest.Size(m)
}
func (m *CancelTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTransferRequest proto.InternalMessageInfo

func (m *CancelTransferRequest) GetTxId() *TxId {
	if m != nil {
		return m.TxId
	}
	return nil
}

func (m *CancelTransferRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type CancelTransferResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta11.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// REQUIRED.
	// TxInfo, includes ao. transfer id, status, description.
	TxInfo *TxInfo `protobuf:"bytes,2,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,3,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CancelTransferResponse) Reset()         { *m = CancelTransferResponse{} }
func (m *CancelTransferResponse) String() string { return proto.CompactTextString(m) }
func (*CancelTransferResponse) ProtoMessage()    {}
func (*CancelTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{5}
}

func (m *CancelTransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTransferResponse.Unmarshal(m, b)
}
func (m *CancelTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTransferResponse.Marshal(b, m, deterministic)
}
func (m *CancelTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTransferResponse.Merge(m, src)
}
func (m *CancelTransferResponse) XXX_Size() int {
	return xxx_messageInfo_CancelTransferResponse.Size(m)
}
func (m *CancelTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTransferResponse proto.InternalMessageInfo

func (m *CancelTransferResponse) GetStatus() *v1beta11.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CancelTransferResponse) GetTxInfo() *TxInfo {
	if m != nil {
		return m.TxInfo
	}
	return nil
}

func (m *CancelTransferResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type ListTransfersRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// OPTIONAL.
	// The list of filters to apply if any.
	Filters              []*ListTransfersRequest_Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ListTransfersRequest) Reset()         { *m = ListTransfersRequest{} }
func (m *ListTransfersRequest) String() string { return proto.CompactTextString(m) }
func (*ListTransfersRequest) ProtoMessage()    {}
func (*ListTransfersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{6}
}

func (m *ListTransfersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransfersRequest.Unmarshal(m, b)
}
func (m *ListTransfersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransfersRequest.Marshal(b, m, deterministic)
}
func (m *ListTransfersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransfersRequest.Merge(m, src)
}
func (m *ListTransfersRequest) XXX_Size() int {
	return xxx_messageInfo_ListTransfersRequest.Size(m)
}
func (m *ListTransfersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransfersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransfersRequest proto.InternalMessageInfo

func (m *ListTransfersRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListTransfersRequest) GetFilters() []*ListTransfersRequest_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// REQUIRED.
// Represents a filter to apply to the request.
type ListTransfersRequest_Filter struct {
	// REQUIRED.
	Type ListTransfersRequest_Filter_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cs3.tx.v1beta1.ListTransfersRequest_Filter_Type" json:"type,omitempty"`
	// REQUIRED.
	//
	// Types that are valid to be assigned to Term:
	//	*ListTransfersRequest_Filter_Status
	//	*ListTransfersRequest_Filter_ShareId
	//	*ListTransfersRequest_Filter_TxId
	Term                 isListTransfersRequest_Filter_Term `protobuf_oneof:"term"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ListTransfersRequest_Filter) Reset()         { *m = ListTransfersRequest_Filter{} }
func (m *ListTransfersRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListTransfersRequest_Filter) ProtoMessage()    {}
func (*ListTransfersRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{6, 0}
}

func (m *ListTransfersRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransfersRequest_Filter.Unmarshal(m, b)
}
func (m *ListTransfersRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransfersRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListTransfersRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransfersRequest_Filter.Merge(m, src)
}
func (m *ListTransfersRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListTransfersRequest_Filter.Size(m)
}
func (m *ListTransfersRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransfersRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransfersRequest_Filter proto.InternalMessageInfo

func (m *ListTransfersRequest_Filter) GetType() ListTransfersRequest_Filter_Type {
	if m != nil {
		return m.Type
	}
	return ListTransfersRequest_Filter_TYPE_INVALID
}

type isListTransfersRequest_Filter_Term interface {
	isListTransfersRequest_Filter_Term()
}

type ListTransfersRequest_Filter_Status struct {
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=cs3.tx.v1beta1.Status,oneof"`
}

type ListTransfersRequest_Filter_ShareId struct {
	ShareId *v1beta12.ShareId `protobuf:"bytes,3,opt,name=share_id,json=shareId,proto3,oneof"`
}

type ListTransfersRequest_Filter_TxId struct {
	TxId *TxId `protobuf:"bytes,4,opt,name=tx_id,json=txId,proto3,oneof"`
}

func (*ListTransfersRequest_Filter_Status) isListTransfersRequest_Filter_Term() {}

func (*ListTransfersRequest_Filter_ShareId) isListTransfersRequest_Filter_Term() {}

func (*ListTransfersRequest_Filter_TxId) isListTransfersRequest_Filter_Term() {}

func (m *ListTransfersRequest_Filter) GetTerm() isListTransfersRequest_Filter_Term {
	if m != nil {
		return m.Term
	}
	return nil
}

func (m *ListTransfersRequest_Filter) GetStatus() Status {
	if x, ok := m.GetTerm().(*ListTransfersRequest_Filter_Status); ok {
		return x.Status
	}
	return Status_STATUS_INVALID
}

func (m *ListTransfersRequest_Filter) GetShareId() *v1beta12.ShareId {
	if x, ok := m.GetTerm().(*ListTransfersRequest_Filter_ShareId); ok {
		return x.ShareId
	}
	return nil
}

func (m *ListTransfersRequest_Filter) GetTxId() *TxId {
	if x, ok := m.GetTerm().(*ListTransfersRequest_Filter_TxId); ok {
		return x.TxId
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListTransfersRequest_Filter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListTransfersRequest_Filter_Status)(nil),
		(*ListTransfersRequest_Filter_ShareId)(nil),
		(*ListTransfersRequest_Filter_TxId)(nil),
	}
}

type ListTransfersResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta11.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// REQUIRED.
	// List of TxInfo types representing transfers.
	Transfers []*TxInfo `protobuf:"bytes,2,rep,name=transfers,proto3" json:"transfers,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,3,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListTransfersResponse) Reset()         { *m = ListTransfersResponse{} }
func (m *ListTransfersResponse) String() string { return proto.CompactTextString(m) }
func (*ListTransfersResponse) ProtoMessage()    {}
func (*ListTransfersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{7}
}

func (m *ListTransfersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransfersResponse.Unmarshal(m, b)
}
func (m *ListTransfersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransfersResponse.Marshal(b, m, deterministic)
}
func (m *ListTransfersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransfersResponse.Merge(m, src)
}
func (m *ListTransfersResponse) XXX_Size() int {
	return xxx_messageInfo_ListTransfersResponse.Size(m)
}
func (m *ListTransfersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransfersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransfersResponse proto.InternalMessageInfo

func (m *ListTransfersResponse) GetStatus() *v1beta11.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListTransfersResponse) GetTransfers() []*TxInfo {
	if m != nil {
		return m.Transfers
	}
	return nil
}

func (m *ListTransfersResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type RetryTransferRequest struct {
	// REQUIRED.
	// The transfer identifier.
	TxId *TxId `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RetryTransferRequest) Reset()         { *m = RetryTransferRequest{} }
func (m *RetryTransferRequest) String() string { return proto.CompactTextString(m) }
func (*RetryTransferRequest) ProtoMessage()    {}
func (*RetryTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{8}
}

func (m *RetryTransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryTransferRequest.Unmarshal(m, b)
}
func (m *RetryTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryTransferRequest.Marshal(b, m, deterministic)
}
func (m *RetryTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryTransferRequest.Merge(m, src)
}
func (m *RetryTransferRequest) XXX_Size() int {
	return xxx_messageInfo_RetryTransferRequest.Size(m)
}
func (m *RetryTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetryTransferRequest proto.InternalMessageInfo

func (m *RetryTransferRequest) GetTxId() *TxId {
	if m != nil {
		return m.TxId
	}
	return nil
}

func (m *RetryTransferRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type RetryTransferResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta11.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// REQUIRED.
	// TxInfo, includes ao. transfer id, status, description.
	TxInfo *TxInfo `protobuf:"bytes,2,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,3,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RetryTransferResponse) Reset()         { *m = RetryTransferResponse{} }
func (m *RetryTransferResponse) String() string { return proto.CompactTextString(m) }
func (*RetryTransferResponse) ProtoMessage()    {}
func (*RetryTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13b0cfd696cc0a1f, []int{9}
}

func (m *RetryTransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryTransferResponse.Unmarshal(m, b)
}
func (m *RetryTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryTransferResponse.Marshal(b, m, deterministic)
}
func (m *RetryTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryTransferResponse.Merge(m, src)
}
func (m *RetryTransferResponse) XXX_Size() int {
	return xxx_messageInfo_RetryTransferResponse.Size(m)
}
func (m *RetryTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetryTransferResponse proto.InternalMessageInfo

func (m *RetryTransferResponse) GetStatus() *v1beta11.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RetryTransferResponse) GetTxInfo() *TxInfo {
	if m != nil {
		return m.TxInfo
	}
	return nil
}

func (m *RetryTransferResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func init() {
	proto.RegisterEnum("cs3.tx.v1beta1.ListTransfersRequest_Filter_Type", ListTransfersRequest_Filter_Type_name, ListTransfersRequest_Filter_Type_value)
	proto.RegisterType((*PullTransferRequest)(nil), "cs3.tx.v1beta1.PullTransferRequest")
	proto.RegisterType((*PullTransferResponse)(nil), "cs3.tx.v1beta1.PullTransferResponse")
	proto.RegisterType((*GetTransferStatusRequest)(nil), "cs3.tx.v1beta1.GetTransferStatusRequest")
	proto.RegisterType((*GetTransferStatusResponse)(nil), "cs3.tx.v1beta1.GetTransferStatusResponse")
	proto.RegisterType((*CancelTransferRequest)(nil), "cs3.tx.v1beta1.CancelTransferRequest")
	proto.RegisterType((*CancelTransferResponse)(nil), "cs3.tx.v1beta1.CancelTransferResponse")
	proto.RegisterType((*ListTransfersRequest)(nil), "cs3.tx.v1beta1.ListTransfersRequest")
	proto.RegisterType((*ListTransfersRequest_Filter)(nil), "cs3.tx.v1beta1.ListTransfersRequest.Filter")
	proto.RegisterType((*ListTransfersResponse)(nil), "cs3.tx.v1beta1.ListTransfersResponse")
	proto.RegisterType((*RetryTransferRequest)(nil), "cs3.tx.v1beta1.RetryTransferRequest")
	proto.RegisterType((*RetryTransferResponse)(nil), "cs3.tx.v1beta1.RetryTransferResponse")
}

func init() { proto.RegisterFile("cs3/tx/v1beta1/tx_api.proto", fileDescriptor_13b0cfd696cc0a1f) }

var fileDescriptor_13b0cfd696cc0a1f = []byte{
	// 753 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x5d, 0x4f, 0xda, 0x50,
	0x18, 0xa6, 0x05, 0x71, 0xbe, 0x28, 0xe2, 0x19, 0x3a, 0x64, 0x1f, 0x21, 0x4c, 0x1d, 0xc6, 0xa4,
	0x08, 0xec, 0x76, 0x17, 0xa0, 0x6e, 0x90, 0x98, 0x8d, 0xd4, 0x6a, 0x74, 0x31, 0x21, 0xb5, 0x1c,
	0xb4, 0x89, 0xd0, 0x7a, 0xce, 0x61, 0xa9, 0x7f, 0x64, 0x3f, 0x60, 0x97, 0xfb, 0x48, 0xb6, 0xbf,
	0xb0, 0xcb, 0xdd, 0xef, 0x47, 0xec, 0x5f, 0x2c, 0x3d, 0x3d, 0x14, 0x29, 0x75, 0x32, 0x93, 0x2d,
	0x5e, 0x69, 0xdf, 0xf7, 0x79, 0xdf, 0xe7, 0xe1, 0xe9, 0xd3, 0xd3, 0xc2, 0x43, 0x83, 0x56, 0x8a,
	0xcc, 0x29, 0xbe, 0x2b, 0x9d, 0x60, 0xa6, 0x97, 0x8a, 0xcc, 0x69, 0xe9, 0xb6, 0xa9, 0xd8, 0xc4,
	0x62, 0x16, 0x4a, 0x1a, 0xb4, 0xa2, 0x30, 0x47, 0x11, 0xcd, 0xec, 0x23, 0x17, 0x4c, 0x6c, 0xc3,
	0x47, 0x53, 0xa6, 0xb3, 0x3e, 0xf5, 0xd0, 0xd9, 0x67, 0x6e, 0x97, 0x9e, 0xe9, 0xc4, 0xec, 0x9d,
	0x16, 0x2d, 0xa3, 0xeb, 0xa3, 0x08, 0xa6, 0x56, 0x9f, 0x18, 0x78, 0x00, 0x7c, 0x12, 0xe0, 0x0c,
	0xf6, 0x1f, 0xf3, 0xfe, 0xa5, 0x8d, 0xe9, 0x50, 0x96, 0x7b, 0xe5, 0xb5, 0xf3, 0xef, 0x25, 0xb8,
	0xdf, 0xec, 0x9f, 0x9f, 0x6b, 0x44, 0xef, 0xd1, 0x0e, 0x26, 0x2a, 0xbe, 0xe8, 0x63, 0xca, 0xd0,
	0x0a, 0x24, 0x29, 0x31, 0x5a, 0x4c, 0x27, 0xa7, 0x98, 0xb5, 0xfa, 0xc4, 0xcc, 0x48, 0x39, 0xa9,
	0x30, 0xa3, 0xce, 0x52, 0x62, 0x68, 0xbc, 0xb8, 0x4f, 0x4c, 0xb4, 0x06, 0xf3, 0x6d, 0x4c, 0xd9,
	0x55, 0x98, 0xcc, 0x61, 0x73, 0x6e, 0x79, 0x88, 0x2b, 0x41, 0xdc, 0xb2, 0xf5, 0x8b, 0x3e, 0xce,
	0x44, 0x73, 0x52, 0x21, 0x51, 0x5e, 0x56, 0xb8, 0x19, 0x5c, 0x87, 0x50, 0xa5, 0xbc, 0xe1, 0x00,
	0x55, 0x00, 0xf3, 0x9f, 0x24, 0x48, 0x8f, 0x0a, 0xa3, 0xb6, 0xd5, 0xa3, 0x18, 0x15, 0x21, 0xee,
	0x39, 0xc5, 0x15, 0x25, 0xca, 0x0f, 0xf8, 0x2e, 0x62, 0x1b, 0xfe, 0xa6, 0x3d, 0xde, 0x56, 0x05,
	0x0c, 0x15, 0x61, 0x9a, 0x39, 0x2d, 0xb3, 0xd7, 0xb1, 0xb8, 0xb8, 0x44, 0x79, 0x49, 0x19, 0xbd,
	0x15, 0x8a, 0xe6, 0x34, 0x7a, 0x1d, 0x4b, 0x8d, 0x33, 0xfe, 0xf7, 0x36, 0x6a, 0x1d, 0xc8, 0xbc,
	0xc2, 0x6c, 0xa0, 0x55, 0x08, 0x10, 0x56, 0xae, 0xc3, 0x94, 0xcb, 0xdf, 0x16, 0x7a, 0xd3, 0x21,
	0xec, 0x6d, 0x35, 0xc6, 0x9c, 0x46, 0xfb, 0x0a, 0xb3, 0x3c, 0x29, 0xf3, 0x57, 0x09, 0x96, 0x43,
	0xa8, 0xef, 0xb2, 0x59, 0x7d, 0x58, 0xdc, 0xd2, 0x7b, 0x06, 0x1e, 0x0b, 0xdd, 0xbf, 0x75, 0xea,
	0x8b, 0x04, 0x4b, 0x41, 0xde, 0xbb, 0x6c, 0xd3, 0xcf, 0x28, 0xa4, 0x77, 0x4d, 0xea, 0xdf, 0x5a,
	0x3f, 0x50, 0xc3, 0x5d, 0xd2, 0x84, 0xbb, 0xd0, 0x0e, 0x4c, 0x77, 0xcc, 0x73, 0x86, 0x09, 0xcd,
	0xc8, 0xb9, 0x68, 0x21, 0x51, 0xde, 0x08, 0xea, 0x0d, 0x63, 0x52, 0x5e, 0xf2, 0x19, 0x75, 0x30,
	0x9b, 0xfd, 0x2e, 0x43, 0xdc, 0xab, 0xa1, 0x6d, 0x88, 0xb9, 0x8c, 0x5c, 0x42, 0xb2, 0xbc, 0xf9,
	0x17, 0xeb, 0x14, 0xed, 0xd2, 0xc6, 0x2a, 0x9f, 0x46, 0x9b, 0xbe, 0xf1, 0x32, 0xdf, 0x33, 0x66,
	0xa3, 0xe7, 0x7b, 0x3d, 0xe2, 0x3b, 0xff, 0x02, 0xee, 0xb9, 0xc7, 0x22, 0x76, 0x63, 0xe2, 0x59,
	0x99, 0xe3, 0x33, 0xe2, 0xac, 0x54, 0x2c, 0xa3, 0x3b, 0x1c, 0x76, 0x81, 0x8d, 0x76, 0x3d, 0xa2,
	0x4e, 0x53, 0xef, 0x5f, 0xb4, 0x31, 0x88, 0x58, 0xec, 0xfa, 0x88, 0xd5, 0x23, 0x5e, 0xc8, 0xf2,
	0xbb, 0x10, 0x73, 0xb5, 0xa2, 0x14, 0xcc, 0x6a, 0x47, 0xcd, 0x9d, 0x56, 0xe3, 0xf5, 0x41, 0x75,
	0xb7, 0xb1, 0x9d, 0x8a, 0xa0, 0x79, 0x48, 0xf0, 0xca, 0x9e, 0x56, 0xd5, 0xf6, 0xf7, 0x52, 0x12,
	0x5a, 0x80, 0x39, 0xaf, 0x50, 0xaf, 0xaa, 0x3b, 0xad, 0xc6, 0x76, 0x4a, 0x46, 0x49, 0x00, 0x5e,
	0xd2, 0x0e, 0xdd, 0xeb, 0x68, 0x2d, 0x0e, 0x31, 0x86, 0x49, 0x37, 0xff, 0x4d, 0x82, 0xc5, 0x80,
	0x3d, 0xb7, 0x8d, 0xe1, 0x73, 0x98, 0x61, 0x83, 0x2d, 0xe2, 0xc6, 0x5e, 0x17, 0xc4, 0x21, 0xf0,
	0x36, 0x59, 0x64, 0x90, 0x56, 0x31, 0x23, 0x97, 0xff, 0xf7, 0x89, 0xfd, 0x2c, 0xc1, 0x62, 0x80,
	0xf6, 0x0e, 0x3f, 0xb0, 0xe5, 0x5f, 0x51, 0x98, 0xd2, 0x9c, 0x6a, 0xb3, 0x81, 0x8e, 0x60, 0xf6,
	0xea, 0xbb, 0x0b, 0x3d, 0x0d, 0x92, 0x85, 0xbc, 0x72, 0xb3, 0x2b, 0x7f, 0x06, 0x89, 0x5f, 0x7e,
	0x06, 0x0b, 0x63, 0xc7, 0x3d, 0x2a, 0x04, 0x47, 0xaf, 0x7b, 0x19, 0x65, 0xd7, 0x27, 0x40, 0x0a,
	0xa6, 0x16, 0x24, 0x47, 0x8f, 0x4b, 0xb4, 0x1a, 0x1c, 0x0e, 0x3d, 0xc6, 0xb3, 0x6b, 0x37, 0xc1,
	0x04, 0xc1, 0x31, 0xcc, 0x8d, 0x3c, 0x07, 0x68, 0x65, 0x92, 0x53, 0x24, 0xbb, 0x7a, 0x03, 0x6a,
	0xb8, 0x7d, 0x24, 0x3b, 0xe3, 0xdb, 0xc3, 0x12, 0x3d, 0xbe, 0x3d, 0x34, 0x80, 0xb5, 0x7d, 0x40,
	0x86, 0xd5, 0x0d, 0x60, 0x6b, 0xa0, 0x39, 0x55, 0xdb, 0x6c, 0xba, 0x5f, 0x56, 0x4d, 0xe9, 0xed,
	0x0c, 0x73, 0x44, 0xe3, 0x83, 0x1c, 0xdd, 0xd2, 0x0e, 0x3f, 0xca, 0xc9, 0x2d, 0x5a, 0x51, 0x34,
	0x47, 0x39, 0x28, 0xd5, 0xdc, 0xf2, 0x0f, 0x5e, 0x38, 0xd6, 0x9c, 0x63, 0x51, 0x38, 0x89, 0xf3,
	0xaf, 0xb2, 0xca, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x1c, 0xfd, 0x29, 0x4a, 0x0a, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TxAPIClient is the client API for TxAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TxAPIClient interface {
	// Requests the destination to pull a resource from source.
	// Returns a PullTransferResponse
	PullTransfer(ctx context.Context, in *PullTransferRequest, opts ...grpc.CallOption) (*PullTransferResponse, error)
	// Requests a transfer status.
	GetTransferStatus(ctx context.Context, in *GetTransferStatusRequest, opts ...grpc.CallOption) (*GetTransferStatusResponse, error)
	// Requests to cancel a transfer.
	CancelTransfer(ctx context.Context, in *CancelTransferRequest, opts ...grpc.CallOption) (*CancelTransferResponse, error)
	// Requests a list of transfers received by the authenticated principle.
	// If a filter is specified, only transfers satisfying the filter MUST be returned.
	ListTransfers(ctx context.Context, in *ListTransfersRequest, opts ...grpc.CallOption) (*ListTransfersResponse, error)
	// Requests retrying a transfer.
	RetryTransfer(ctx context.Context, in *RetryTransferRequest, opts ...grpc.CallOption) (*RetryTransferResponse, error)
}

type txAPIClient struct {
	cc *grpc.ClientConn
}

func NewTxAPIClient(cc *grpc.ClientConn) TxAPIClient {
	return &txAPIClient{cc}
}

func (c *txAPIClient) PullTransfer(ctx context.Context, in *PullTransferRequest, opts ...grpc.CallOption) (*PullTransferResponse, error) {
	out := new(PullTransferResponse)
	err := c.cc.Invoke(ctx, "/cs3.tx.v1beta1.TxAPI/PullTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *txAPIClient) GetTransferStatus(ctx context.Context, in *GetTransferStatusRequest, opts ...grpc.CallOption) (*GetTransferStatusResponse, error) {
	out := new(GetTransferStatusResponse)
	err := c.cc.Invoke(ctx, "/cs3.tx.v1beta1.TxAPI/GetTransferStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *txAPIClient) CancelTransfer(ctx context.Context, in *CancelTransferRequest, opts ...grpc.CallOption) (*CancelTransferResponse, error) {
	out := new(CancelTransferResponse)
	err := c.cc.Invoke(ctx, "/cs3.tx.v1beta1.TxAPI/CancelTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *txAPIClient) ListTransfers(ctx context.Context, in *ListTransfersRequest, opts ...grpc.CallOption) (*ListTransfersResponse, error) {
	out := new(ListTransfersResponse)
	err := c.cc.Invoke(ctx, "/cs3.tx.v1beta1.TxAPI/ListTransfers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *txAPIClient) RetryTransfer(ctx context.Context, in *RetryTransferRequest, opts ...grpc.CallOption) (*RetryTransferResponse, error) {
	out := new(RetryTransferResponse)
	err := c.cc.Invoke(ctx, "/cs3.tx.v1beta1.TxAPI/RetryTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TxAPIServer is the server API for TxAPI service.
type TxAPIServer interface {
	// Requests the destination to pull a resource from source.
	// Returns a PullTransferResponse
	PullTransfer(context.Context, *PullTransferRequest) (*PullTransferResponse, error)
	// Requests a transfer status.
	GetTransferStatus(context.Context, *GetTransferStatusRequest) (*GetTransferStatusResponse, error)
	// Requests to cancel a transfer.
	CancelTransfer(context.Context, *CancelTransferRequest) (*CancelTransferResponse, error)
	// Requests a list of transfers received by the authenticated principle.
	// If a filter is specified, only transfers satisfying the filter MUST be returned.
	ListTransfers(context.Context, *ListTransfersRequest) (*ListTransfersResponse, error)
	// Requests retrying a transfer.
	RetryTransfer(context.Context, *RetryTransferRequest) (*RetryTransferResponse, error)
}

// UnimplementedTxAPIServer can be embedded to have forward compatible implementations.
type UnimplementedTxAPIServer struct {
}

func (*UnimplementedTxAPIServer) PullTransfer(ctx context.Context, req *PullTransferRequest) (*PullTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PullTransfer not implemented")
}
func (*UnimplementedTxAPIServer) GetTransferStatus(ctx context.Context, req *GetTransferStatusRequest) (*GetTransferStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransferStatus not implemented")
}
func (*UnimplementedTxAPIServer) CancelTransfer(ctx context.Context, req *CancelTransferRequest) (*CancelTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelTransfer not implemented")
}
func (*UnimplementedTxAPIServer) ListTransfers(ctx context.Context, req *ListTransfersRequest) (*ListTransfersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTransfers not implemented")
}
func (*UnimplementedTxAPIServer) RetryTransfer(ctx context.Context, req *RetryTransferRequest) (*RetryTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetryTransfer not implemented")
}

func RegisterTxAPIServer(s *grpc.Server, srv TxAPIServer) {
	s.RegisterService(&_TxAPI_serviceDesc, srv)
}

func _TxAPI_PullTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxAPIServer).PullTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.tx.v1beta1.TxAPI/PullTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxAPIServer).PullTransfer(ctx, req.(*PullTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TxAPI_GetTransferStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransferStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxAPIServer).GetTransferStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.tx.v1beta1.TxAPI/GetTransferStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxAPIServer).GetTransferStatus(ctx, req.(*GetTransferStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TxAPI_CancelTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxAPIServer).CancelTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.tx.v1beta1.TxAPI/CancelTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxAPIServer).CancelTransfer(ctx, req.(*CancelTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TxAPI_ListTransfers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTransfersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxAPIServer).ListTransfers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.tx.v1beta1.TxAPI/ListTransfers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxAPIServer).ListTransfers(ctx, req.(*ListTransfersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TxAPI_RetryTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetryTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxAPIServer).RetryTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.tx.v1beta1.TxAPI/RetryTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxAPIServer).RetryTransfer(ctx, req.(*RetryTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TxAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cs3.tx.v1beta1.TxAPI",
	HandlerType: (*TxAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PullTransfer",
			Handler:    _TxAPI_PullTransfer_Handler,
		},
		{
			MethodName: "GetTransferStatus",
			Handler:    _TxAPI_GetTransferStatus_Handler,
		},
		{
			MethodName: "CancelTransfer",
			Handler:    _TxAPI_CancelTransfer_Handler,
		},
		{
			MethodName: "ListTransfers",
			Handler:    _TxAPI_ListTransfers_Handler,
		},
		{
			MethodName: "RetryTransfer",
			Handler:    _TxAPI_RetryTransfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cs3/tx/v1beta1/tx_api.proto",
}
