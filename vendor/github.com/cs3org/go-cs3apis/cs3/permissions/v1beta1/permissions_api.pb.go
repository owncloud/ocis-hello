// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/permissions/v1beta1/permissions_api.proto

package permissionsv1beta1

import (
	context "context"
	fmt "fmt"
	v1beta11 "github.com/cs3org/go-cs3apis/cs3/rpc/v1beta1"
	v1beta1 "github.com/cs3org/go-cs3apis/cs3/storage/provider/v1beta1"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CheckPermissionsRequest is used to check if a user has a certain permission.
type CheckPermissionRequest struct {
	//REQUIRED.
	// The permission to check.
	Permission string `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission,omitempty"`
	// REQUIRED.
	// The subject holding the permission.
	SubjectRef *SubjectReference `protobuf:"bytes,2,opt,name=subject_ref,json=subjectRef,proto3" json:"subject_ref,omitempty"`
	// OPTIONAL.
	// The target resource of the permission.
	Ref                  *v1beta1.Reference `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CheckPermissionRequest) Reset()         { *m = CheckPermissionRequest{} }
func (m *CheckPermissionRequest) String() string { return proto.CompactTextString(m) }
func (*CheckPermissionRequest) ProtoMessage()    {}
func (*CheckPermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_54602e0476ec6c5b, []int{0}
}

func (m *CheckPermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckPermissionRequest.Unmarshal(m, b)
}
func (m *CheckPermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckPermissionRequest.Marshal(b, m, deterministic)
}
func (m *CheckPermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckPermissionRequest.Merge(m, src)
}
func (m *CheckPermissionRequest) XXX_Size() int {
	return xxx_messageInfo_CheckPermissionRequest.Size(m)
}
func (m *CheckPermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckPermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckPermissionRequest proto.InternalMessageInfo

func (m *CheckPermissionRequest) GetPermission() string {
	if m != nil {
		return m.Permission
	}
	return ""
}

func (m *CheckPermissionRequest) GetSubjectRef() *SubjectReference {
	if m != nil {
		return m.SubjectRef
	}
	return nil
}

func (m *CheckPermissionRequest) GetRef() *v1beta1.Reference {
	if m != nil {
		return m.Ref
	}
	return nil
}

// CheckPermissionsResponse ...
type CheckPermissionResponse struct {
	// REQUIRED.
	// The response status.
	Status               *v1beta11.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CheckPermissionResponse) Reset()         { *m = CheckPermissionResponse{} }
func (m *CheckPermissionResponse) String() string { return proto.CompactTextString(m) }
func (*CheckPermissionResponse) ProtoMessage()    {}
func (*CheckPermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_54602e0476ec6c5b, []int{1}
}

func (m *CheckPermissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckPermissionResponse.Unmarshal(m, b)
}
func (m *CheckPermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckPermissionResponse.Marshal(b, m, deterministic)
}
func (m *CheckPermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckPermissionResponse.Merge(m, src)
}
func (m *CheckPermissionResponse) XXX_Size() int {
	return xxx_messageInfo_CheckPermissionResponse.Size(m)
}
func (m *CheckPermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckPermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckPermissionResponse proto.InternalMessageInfo

func (m *CheckPermissionResponse) GetStatus() *v1beta11.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*CheckPermissionRequest)(nil), "cs3.permissions.v1beta1.CheckPermissionRequest")
	proto.RegisterType((*CheckPermissionResponse)(nil), "cs3.permissions.v1beta1.CheckPermissionResponse")
}

func init() {
	proto.RegisterFile("cs3/permissions/v1beta1/permissions_api.proto", fileDescriptor_54602e0476ec6c5b)
}

var fileDescriptor_54602e0476ec6c5b = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x86, 0x99, 0x16, 0x0a, 0x77, 0x0a, 0xf7, 0xc2, 0x5c, 0x30, 0xa5, 0x8a, 0x94, 0x6e, 0x5a,
	0x41, 0x27, 0xb6, 0x59, 0xb9, 0xb4, 0x5d, 0xd9, 0x55, 0x88, 0x20, 0x22, 0x85, 0x92, 0x8e, 0xa7,
	0x1a, 0xa5, 0x9d, 0x71, 0xce, 0xa4, 0x0f, 0xe0, 0xc2, 0x07, 0x71, 0xe9, 0x4b, 0xb8, 0xf7, 0xa9,
	0x24, 0x93, 0x34, 0x19, 0xd4, 0x80, 0xdb, 0xf3, 0xff, 0xe7, 0xcb, 0xff, 0x9f, 0x0c, 0x3d, 0x11,
	0x18, 0xf8, 0x0a, 0xf4, 0x3a, 0x41, 0x4c, 0xe4, 0x06, 0xfd, 0xed, 0x68, 0x09, 0x26, 0x1e, 0xb9,
	0xb3, 0x45, 0xac, 0x12, 0xae, 0xb4, 0x34, 0x92, 0x79, 0x02, 0x03, 0xee, 0x48, 0xbc, 0xb0, 0x77,
	0x07, 0x75, 0x1c, 0x0d, 0x28, 0x53, 0x2d, 0x00, 0x73, 0x42, 0xf7, 0x20, 0x33, 0x6a, 0x25, 0x4a,
	0x03, 0x9a, 0xd8, 0xa4, 0x3b, 0xf5, 0x38, 0x53, 0xd1, 0x48, 0x1d, 0xdf, 0x81, 0xaf, 0xb4, 0xdc,
	0x26, 0xb7, 0xa0, 0xeb, 0x58, 0xfd, 0x77, 0x42, 0xf7, 0xa6, 0xf7, 0x20, 0x1e, 0xc3, 0xf2, 0xc3,
	0x11, 0x3c, 0xa5, 0x80, 0x86, 0x1d, 0x52, 0x5a, 0xa5, 0xe9, 0x90, 0x1e, 0x19, 0xfe, 0x89, 0x9c,
	0x09, 0x9b, 0xd1, 0x36, 0xa6, 0xcb, 0x07, 0x10, 0x66, 0xa1, 0x61, 0xd5, 0x69, 0xf4, 0xc8, 0xb0,
	0x3d, 0x3e, 0xe2, 0x35, 0xf5, 0xf8, 0x65, 0xee, 0x8d, 0x60, 0x05, 0x1a, 0x36, 0x02, 0x22, 0x8a,
	0xe5, 0x84, 0x9d, 0xd1, 0x66, 0xc6, 0x68, 0x5a, 0xc6, 0xc0, 0x32, 0x8a, 0x0a, 0x7c, 0x57, 0xa1,
	0x04, 0x55, 0x84, 0x6c, 0xa7, 0x3f, 0xa3, 0xde, 0xb7, 0x02, 0xa8, 0xe4, 0x06, 0x81, 0xf9, 0xb4,
	0x95, 0x9f, 0xc6, 0xa6, 0x6f, 0x8f, 0x3d, 0x0b, 0xd6, 0x4a, 0x54, 0xa1, 0xac, 0x1c, 0x15, 0xb6,
	0xf1, 0x0b, 0xa1, 0x7f, 0x2b, 0x0e, 0x9e, 0x87, 0x17, 0xcc, 0xd0, 0x7f, 0x5f, 0xf0, 0xcc, 0xaf,
	0xed, 0xf8, 0xf3, 0x25, 0xbb, 0xa7, 0xbf, 0x5f, 0xc8, 0x93, 0x4f, 0x9e, 0x09, 0xdd, 0x17, 0x72,
	0x5d, 0xb7, 0x37, 0xf9, 0xef, 0xa6, 0x54, 0x49, 0x98, 0xfd, 0xcb, 0x90, 0xdc, 0x30, 0xc7, 0x5b,
	0x58, 0x5f, 0x1b, 0xcd, 0x69, 0x78, 0xfd, 0xd6, 0xf0, 0xa6, 0x18, 0x70, 0x67, 0x8b, 0x5f, 0x8d,
	0x26, 0x99, 0xfe, 0x61, 0x95, 0xb9, 0xa3, 0xcc, 0x0b, 0x65, 0xd9, 0xb2, 0x4f, 0x24, 0xf8, 0x0c,
	0x00, 0x00, 0xff, 0xff, 0x62, 0x25, 0x26, 0x30, 0xe1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PermissionsAPIClient is the client API for PermissionsAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PermissionsAPIClient interface {
	// CheckPermission defines a method to check permission/role.
	CheckPermission(ctx context.Context, in *CheckPermissionRequest, opts ...grpc.CallOption) (*CheckPermissionResponse, error)
}

type permissionsAPIClient struct {
	cc *grpc.ClientConn
}

func NewPermissionsAPIClient(cc *grpc.ClientConn) PermissionsAPIClient {
	return &permissionsAPIClient{cc}
}

func (c *permissionsAPIClient) CheckPermission(ctx context.Context, in *CheckPermissionRequest, opts ...grpc.CallOption) (*CheckPermissionResponse, error) {
	out := new(CheckPermissionResponse)
	err := c.cc.Invoke(ctx, "/cs3.permissions.v1beta1.PermissionsAPI/CheckPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PermissionsAPIServer is the server API for PermissionsAPI service.
type PermissionsAPIServer interface {
	// CheckPermission defines a method to check permission/role.
	CheckPermission(context.Context, *CheckPermissionRequest) (*CheckPermissionResponse, error)
}

// UnimplementedPermissionsAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPermissionsAPIServer struct {
}

func (*UnimplementedPermissionsAPIServer) CheckPermission(ctx context.Context, req *CheckPermissionRequest) (*CheckPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPermission not implemented")
}

func RegisterPermissionsAPIServer(s *grpc.Server, srv PermissionsAPIServer) {
	s.RegisterService(&_PermissionsAPI_serviceDesc, srv)
}

func _PermissionsAPI_CheckPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionsAPIServer).CheckPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.permissions.v1beta1.PermissionsAPI/CheckPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionsAPIServer).CheckPermission(ctx, req.(*CheckPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PermissionsAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cs3.permissions.v1beta1.PermissionsAPI",
	HandlerType: (*PermissionsAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckPermission",
			Handler:    _PermissionsAPI_CheckPermission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cs3/permissions/v1beta1/permissions_api.proto",
}
