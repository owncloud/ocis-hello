// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/auth/applications/v1beta1/applications_api.proto

package applicationsv1beta1

import (
	context "context"
	fmt "fmt"
	v1beta11 "github.com/cs3org/go-cs3apis/cs3/auth/provider/v1beta1"
	v1beta13 "github.com/cs3org/go-cs3apis/cs3/identity/user/v1beta1"
	v1beta12 "github.com/cs3org/go-cs3apis/cs3/rpc/v1beta1"
	v1beta1 "github.com/cs3org/go-cs3apis/cs3/types/v1beta1"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GenerateAppPasswordRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// OPTIONAL.
	// The scope of the token to be issued.
	// This would be a list of resources with corresponding role-based access scope.
	TokenScope map[string]*v1beta11.Scope `protobuf:"bytes,2,rep,name=token_scope,json=tokenScope,proto3" json:"token_scope,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// OPTIONAL.
	// A label to be associated with the password.
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// OPTIONAL.
	// The time when the token will expire.
	Expiration           *v1beta1.Timestamp `protobuf:"bytes,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GenerateAppPasswordRequest) Reset()         { *m = GenerateAppPasswordRequest{} }
func (m *GenerateAppPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateAppPasswordRequest) ProtoMessage()    {}
func (*GenerateAppPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_829b4bb376cdbfb0, []int{0}
}

func (m *GenerateAppPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateAppPasswordRequest.Unmarshal(m, b)
}
func (m *GenerateAppPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateAppPasswordRequest.Marshal(b, m, deterministic)
}
func (m *GenerateAppPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateAppPasswordRequest.Merge(m, src)
}
func (m *GenerateAppPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateAppPasswordRequest.Size(m)
}
func (m *GenerateAppPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateAppPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateAppPasswordRequest proto.InternalMessageInfo

func (m *GenerateAppPasswordRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GenerateAppPasswordRequest) GetTokenScope() map[string]*v1beta11.Scope {
	if m != nil {
		return m.TokenScope
	}
	return nil
}

func (m *GenerateAppPasswordRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *GenerateAppPasswordRequest) GetExpiration() *v1beta1.Timestamp {
	if m != nil {
		return m.Expiration
	}
	return nil
}

type GenerateAppPasswordResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta12.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The generated access password.
	AppPassword          *AppPassword `protobuf:"bytes,3,opt,name=app_password,json=appPassword,proto3" json:"app_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GenerateAppPasswordResponse) Reset()         { *m = GenerateAppPasswordResponse{} }
func (m *GenerateAppPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateAppPasswordResponse) ProtoMessage()    {}
func (*GenerateAppPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_829b4bb376cdbfb0, []int{1}
}

func (m *GenerateAppPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateAppPasswordResponse.Unmarshal(m, b)
}
func (m *GenerateAppPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateAppPasswordResponse.Marshal(b, m, deterministic)
}
func (m *GenerateAppPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateAppPasswordResponse.Merge(m, src)
}
func (m *GenerateAppPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateAppPasswordResponse.Size(m)
}
func (m *GenerateAppPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateAppPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateAppPasswordResponse proto.InternalMessageInfo

func (m *GenerateAppPasswordResponse) GetStatus() *v1beta12.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GenerateAppPasswordResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GenerateAppPasswordResponse) GetAppPassword() *AppPassword {
	if m != nil {
		return m.AppPassword
	}
	return nil
}

type ListAppPasswordsRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListAppPasswordsRequest) Reset()         { *m = ListAppPasswordsRequest{} }
func (m *ListAppPasswordsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAppPasswordsRequest) ProtoMessage()    {}
func (*ListAppPasswordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_829b4bb376cdbfb0, []int{2}
}

func (m *ListAppPasswordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAppPasswordsRequest.Unmarshal(m, b)
}
func (m *ListAppPasswordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAppPasswordsRequest.Marshal(b, m, deterministic)
}
func (m *ListAppPasswordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAppPasswordsRequest.Merge(m, src)
}
func (m *ListAppPasswordsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAppPasswordsRequest.Size(m)
}
func (m *ListAppPasswordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAppPasswordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAppPasswordsRequest proto.InternalMessageInfo

func (m *ListAppPasswordsRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type ListAppPasswordsResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta12.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The generated access password.
	AppPasswords         []*AppPassword `protobuf:"bytes,3,rep,name=app_passwords,json=appPasswords,proto3" json:"app_passwords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListAppPasswordsResponse) Reset()         { *m = ListAppPasswordsResponse{} }
func (m *ListAppPasswordsResponse) String() string { return proto.CompactTextString(m) }
func (*ListAppPasswordsResponse) ProtoMessage()    {}
func (*ListAppPasswordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_829b4bb376cdbfb0, []int{3}
}

func (m *ListAppPasswordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAppPasswordsResponse.Unmarshal(m, b)
}
func (m *ListAppPasswordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAppPasswordsResponse.Marshal(b, m, deterministic)
}
func (m *ListAppPasswordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAppPasswordsResponse.Merge(m, src)
}
func (m *ListAppPasswordsResponse) XXX_Size() int {
	return xxx_messageInfo_ListAppPasswordsResponse.Size(m)
}
func (m *ListAppPasswordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAppPasswordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAppPasswordsResponse proto.InternalMessageInfo

func (m *ListAppPasswordsResponse) GetStatus() *v1beta12.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListAppPasswordsResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListAppPasswordsResponse) GetAppPasswords() []*AppPassword {
	if m != nil {
		return m.AppPasswords
	}
	return nil
}

type InvalidateAppPasswordRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The password which has to be invalidated.
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvalidateAppPasswordRequest) Reset()         { *m = InvalidateAppPasswordRequest{} }
func (m *InvalidateAppPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*InvalidateAppPasswordRequest) ProtoMessage()    {}
func (*InvalidateAppPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_829b4bb376cdbfb0, []int{4}
}

func (m *InvalidateAppPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidateAppPasswordRequest.Unmarshal(m, b)
}
func (m *InvalidateAppPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidateAppPasswordRequest.Marshal(b, m, deterministic)
}
func (m *InvalidateAppPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidateAppPasswordRequest.Merge(m, src)
}
func (m *InvalidateAppPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_InvalidateAppPasswordRequest.Size(m)
}
func (m *InvalidateAppPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidateAppPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidateAppPasswordRequest proto.InternalMessageInfo

func (m *InvalidateAppPasswordRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *InvalidateAppPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type InvalidateAppPasswordResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta12.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InvalidateAppPasswordResponse) Reset()         { *m = InvalidateAppPasswordResponse{} }
func (m *InvalidateAppPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*InvalidateAppPasswordResponse) ProtoMessage()    {}
func (*InvalidateAppPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_829b4bb376cdbfb0, []int{5}
}

func (m *InvalidateAppPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidateAppPasswordResponse.Unmarshal(m, b)
}
func (m *InvalidateAppPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidateAppPasswordResponse.Marshal(b, m, deterministic)
}
func (m *InvalidateAppPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidateAppPasswordResponse.Merge(m, src)
}
func (m *InvalidateAppPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_InvalidateAppPasswordResponse.Size(m)
}
func (m *InvalidateAppPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidateAppPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidateAppPasswordResponse proto.InternalMessageInfo

func (m *InvalidateAppPasswordResponse) GetStatus() *v1beta12.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InvalidateAppPasswordResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type GetAppPasswordRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The user who created the app password.
	User *v1beta13.UserId `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// REQUIRED.
	// The password which has to be retrieved.
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppPasswordRequest) Reset()         { *m = GetAppPasswordRequest{} }
func (m *GetAppPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*GetAppPasswordRequest) ProtoMessage()    {}
func (*GetAppPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_829b4bb376cdbfb0, []int{6}
}

func (m *GetAppPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppPasswordRequest.Unmarshal(m, b)
}
func (m *GetAppPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppPasswordRequest.Marshal(b, m, deterministic)
}
func (m *GetAppPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppPasswordRequest.Merge(m, src)
}
func (m *GetAppPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_GetAppPasswordRequest.Size(m)
}
func (m *GetAppPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppPasswordRequest proto.InternalMessageInfo

func (m *GetAppPasswordRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetAppPasswordRequest) GetUser() *v1beta13.UserId {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GetAppPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type GetAppPasswordResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta12.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The generated access password.
	AppPassword          *AppPassword `protobuf:"bytes,3,opt,name=app_password,json=appPassword,proto3" json:"app_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetAppPasswordResponse) Reset()         { *m = GetAppPasswordResponse{} }
func (m *GetAppPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*GetAppPasswordResponse) ProtoMessage()    {}
func (*GetAppPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_829b4bb376cdbfb0, []int{7}
}

func (m *GetAppPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppPasswordResponse.Unmarshal(m, b)
}
func (m *GetAppPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppPasswordResponse.Marshal(b, m, deterministic)
}
func (m *GetAppPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppPasswordResponse.Merge(m, src)
}
func (m *GetAppPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_GetAppPasswordResponse.Size(m)
}
func (m *GetAppPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppPasswordResponse proto.InternalMessageInfo

func (m *GetAppPasswordResponse) GetStatus() *v1beta12.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetAppPasswordResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetAppPasswordResponse) GetAppPassword() *AppPassword {
	if m != nil {
		return m.AppPassword
	}
	return nil
}

func init() {
	proto.RegisterType((*GenerateAppPasswordRequest)(nil), "cs3.auth.applications.v1beta1.GenerateAppPasswordRequest")
	proto.RegisterMapType((map[string]*v1beta11.Scope)(nil), "cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.TokenScopeEntry")
	proto.RegisterType((*GenerateAppPasswordResponse)(nil), "cs3.auth.applications.v1beta1.GenerateAppPasswordResponse")
	proto.RegisterType((*ListAppPasswordsRequest)(nil), "cs3.auth.applications.v1beta1.ListAppPasswordsRequest")
	proto.RegisterType((*ListAppPasswordsResponse)(nil), "cs3.auth.applications.v1beta1.ListAppPasswordsResponse")
	proto.RegisterType((*InvalidateAppPasswordRequest)(nil), "cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest")
	proto.RegisterType((*InvalidateAppPasswordResponse)(nil), "cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse")
	proto.RegisterType((*GetAppPasswordRequest)(nil), "cs3.auth.applications.v1beta1.GetAppPasswordRequest")
	proto.RegisterType((*GetAppPasswordResponse)(nil), "cs3.auth.applications.v1beta1.GetAppPasswordResponse")
}

func init() {
	proto.RegisterFile("cs3/auth/applications/v1beta1/applications_api.proto", fileDescriptor_829b4bb376cdbfb0)
}

var fileDescriptor_829b4bb376cdbfb0 = []byte{
	// 686 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0x41, 0x4f, 0x13, 0x41,
	0x14, 0xce, 0x6c, 0x81, 0xc8, 0x2b, 0x0a, 0x19, 0x40, 0xea, 0x0a, 0x49, 0xd9, 0x13, 0x9a, 0xb8,
	0x4d, 0x5b, 0x40, 0x45, 0x2e, 0x85, 0x18, 0xd2, 0x04, 0x43, 0xb3, 0xa2, 0x07, 0x43, 0xd2, 0x0c,
	0xdb, 0x49, 0x5c, 0x69, 0x77, 0x87, 0x9d, 0xd9, 0x6a, 0x0f, 0x9e, 0xb8, 0x7a, 0xf2, 0xe0, 0xcd,
	0x8b, 0x47, 0x7f, 0x82, 0x3f, 0x41, 0x0f, 0xfa, 0x53, 0xfc, 0x09, 0x66, 0x66, 0x87, 0xed, 0xb6,
	0x96, 0x56, 0x1a, 0x42, 0xe2, 0xad, 0xd3, 0xf7, 0x7d, 0xdf, 0x7b, 0xf3, 0xbd, 0x79, 0x2f, 0x0b,
	0xeb, 0x2e, 0x2f, 0x17, 0x48, 0x24, 0x5e, 0x17, 0x08, 0x63, 0x4d, 0xcf, 0x25, 0xc2, 0x0b, 0x7c,
	0x5e, 0x68, 0x17, 0x8f, 0xa9, 0x20, 0xc5, 0x9e, 0x3f, 0xeb, 0x84, 0x79, 0x36, 0x0b, 0x03, 0x11,
	0xe0, 0x15, 0x97, 0x97, 0x6d, 0xc9, 0xb2, 0xd3, 0x00, 0x5b, 0xb3, 0xcc, 0x07, 0xc3, 0x45, 0x43,
	0xca, 0x83, 0x28, 0x74, 0x29, 0x8f, 0xd5, 0xcc, 0x7b, 0x09, 0x9c, 0x85, 0x41, 0xdb, 0x6b, 0xd0,
	0x70, 0x38, 0xd4, 0x6b, 0x50, 0x5f, 0x78, 0xa2, 0x53, 0x88, 0xf8, 0x10, 0xe8, 0xb2, 0x84, 0x86,
	0xcc, 0x4d, 0x00, 0x5c, 0x10, 0x11, 0x9d, 0x47, 0xe5, 0x0d, 0x0a, 0xa2, 0xc3, 0x68, 0xb7, 0x2c,
	0x75, 0x8a, 0xc3, 0xd6, 0x6f, 0x03, 0xcc, 0x3d, 0xea, 0xd3, 0x90, 0x08, 0x5a, 0x61, 0xac, 0x46,
	0x38, 0x7f, 0x1b, 0x84, 0x0d, 0x87, 0x9e, 0x46, 0x94, 0x0b, 0x5c, 0x84, 0xa9, 0x80, 0x91, 0xd3,
	0x88, 0xe6, 0x50, 0x1e, 0xad, 0x65, 0x4b, 0x77, 0x6c, 0x69, 0x48, 0x2c, 0xa0, 0xe5, 0xec, 0x03,
	0x05, 0x70, 0x34, 0x10, 0xbf, 0x81, 0xac, 0x08, 0x4e, 0xa8, 0x5f, 0xe7, 0x6e, 0xc0, 0x68, 0xce,
	0xc8, 0x67, 0xd6, 0xb2, 0xa5, 0xaa, 0x3d, 0xd4, 0x48, 0xfb, 0xe2, 0x12, 0xec, 0x43, 0x29, 0xf6,
	0x5c, 0x6a, 0x3d, 0xf5, 0x45, 0xd8, 0x71, 0x40, 0x24, 0x7f, 0xe0, 0x05, 0x98, 0x6c, 0x92, 0x63,
	0xda, 0xcc, 0x65, 0xf2, 0x68, 0x6d, 0xda, 0x89, 0x0f, 0x78, 0x1b, 0x80, 0xbe, 0x63, 0x5e, 0xa8,
	0x72, 0xe4, 0x26, 0x54, 0xe1, 0xcb, 0x03, 0x0a, 0x3f, 0xf4, 0x5a, 0x94, 0x0b, 0xd2, 0x62, 0x4e,
	0x0a, 0x6f, 0xd6, 0x61, 0xb6, 0x2f, 0x25, 0x9e, 0x83, 0xcc, 0x09, 0xed, 0x28, 0x0b, 0xa6, 0x1d,
	0xf9, 0x13, 0x6f, 0xc2, 0x64, 0x9b, 0x34, 0x23, 0x79, 0x3d, 0xa9, 0x9e, 0xef, 0x5e, 0xef, 0xbc,
	0xb3, 0x49, 0x16, 0xa5, 0xe3, 0xc4, 0xf0, 0x2d, 0xe3, 0x11, 0xb2, 0x7e, 0x21, 0xb8, 0x3b, 0xf0,
	0xbe, 0x9c, 0x05, 0x3e, 0xa7, 0xb8, 0x00, 0x53, 0x71, 0x07, 0xb5, 0xe7, 0x4b, 0x4a, 0x3c, 0x64,
	0x6e, 0x57, 0x52, 0x85, 0x1d, 0x0d, 0x4b, 0x35, 0xc9, 0xf8, 0xd7, 0x26, 0x3d, 0x83, 0x19, 0xc2,
	0x58, 0x9d, 0xe9, 0xdc, 0xca, 0xbf, 0x6c, 0xe9, 0xfe, 0x88, 0x2e, 0xa5, 0xab, 0xcd, 0x92, 0xee,
	0xc1, 0xda, 0x87, 0xa5, 0x7d, 0x8f, 0x8b, 0x54, 0x9c, 0x8f, 0xff, 0x82, 0xac, 0x9f, 0x08, 0x72,
	0x7f, 0xcb, 0x5d, 0xa3, 0x3b, 0x07, 0x70, 0x33, 0xed, 0x0e, 0xcf, 0x65, 0xd4, 0x23, 0xbe, 0x8c,
	0x3d, 0x33, 0x29, 0x7b, 0xb8, 0xd5, 0x82, 0xe5, 0xaa, 0xdf, 0x26, 0x4d, 0xaf, 0x71, 0x65, 0x63,
	0x66, 0xc2, 0x8d, 0xa4, 0x7b, 0x86, 0x7a, 0x98, 0xc9, 0xd9, 0x3a, 0x43, 0xb0, 0x72, 0x41, 0xbe,
	0xeb, 0x73, 0xd1, 0xfa, 0x8c, 0x60, 0x71, 0x8f, 0x8a, 0xab, 0xb9, 0xee, 0x06, 0x4c, 0xc8, 0x25,
	0xa8, 0xb3, 0xaf, 0x2a, 0xc2, 0xf9, 0x7a, 0xb4, 0x65, 0x24, 0x21, 0xbe, 0xe0, 0x34, 0xac, 0x36,
	0x1c, 0x05, 0xef, 0x71, 0x29, 0xd3, 0xe7, 0xd2, 0x0f, 0x04, 0xb7, 0xfb, 0xeb, 0xfb, 0x6f, 0x47,
	0xb0, 0xf4, 0x6d, 0x02, 0x66, 0x2b, 0x29, 0x46, 0xa5, 0x56, 0xc5, 0x1f, 0x10, 0xcc, 0x0f, 0xd8,
	0x34, 0xf8, 0xf1, 0xd8, 0xdb, 0xd8, 0xdc, 0x1a, 0x87, 0xaa, 0x5d, 0x3d, 0x43, 0x30, 0xd7, 0x3f,
	0xd7, 0x78, 0x73, 0x84, 0xe0, 0x05, 0x7b, 0xc5, 0x7c, 0x78, 0x69, 0x9e, 0xae, 0xe2, 0x23, 0x82,
	0xc5, 0x81, 0xc3, 0x81, 0x9f, 0x8c, 0x90, 0x1c, 0x36, 0xc2, 0xe6, 0xf6, 0x78, 0x64, 0x5d, 0xd4,
	0x7b, 0xb8, 0xd5, 0xfb, 0x14, 0xf1, 0xfa, 0x48, 0xa3, 0x07, 0x4c, 0x96, 0xb9, 0x71, 0x49, 0x56,
	0x9c, 0x7e, 0xe7, 0x13, 0x82, 0x55, 0x37, 0x68, 0x0d, 0x27, 0xef, 0x2c, 0xf4, 0xbc, 0x2f, 0xe6,
	0xd5, 0xe4, 0x17, 0x44, 0x0d, 0xbd, 0x9a, 0x4f, 0xa3, 0x35, 0xf8, 0x8b, 0x91, 0xd9, 0xad, 0x54,
	0xbe, 0x1a, 0x2b, 0xbb, 0xbc, 0x6c, 0x57, 0xa4, 0x64, 0x9a, 0x6c, 0xbf, 0x2c, 0xee, 0x48, 0xd4,
	0x77, 0x15, 0x3f, 0x92, 0xf1, 0xa3, 0x74, 0xfc, 0x48, 0xc7, 0x8f, 0xa7, 0xd4, 0x57, 0x4a, 0xf9,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x14, 0x79, 0xb2, 0xbe, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApplicationsAPIClient is the client API for ApplicationsAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApplicationsAPIClient interface {
	// GenerateAppPassword creates a password with specified scope to be used by
	// third-party applications.
	GenerateAppPassword(ctx context.Context, in *GenerateAppPasswordRequest, opts ...grpc.CallOption) (*GenerateAppPasswordResponse, error)
	// ListAppPasswords lists the application passwords created by a user.
	ListAppPasswords(ctx context.Context, in *ListAppPasswordsRequest, opts ...grpc.CallOption) (*ListAppPasswordsResponse, error)
	// InvalidateAppPassword invalidates a generated password.
	InvalidateAppPassword(ctx context.Context, in *InvalidateAppPasswordRequest, opts ...grpc.CallOption) (*InvalidateAppPasswordResponse, error)
	// GetAppPassword retrieves the password information by the combination of username and password.
	GetAppPassword(ctx context.Context, in *GetAppPasswordRequest, opts ...grpc.CallOption) (*GetAppPasswordResponse, error)
}

type applicationsAPIClient struct {
	cc *grpc.ClientConn
}

func NewApplicationsAPIClient(cc *grpc.ClientConn) ApplicationsAPIClient {
	return &applicationsAPIClient{cc}
}

func (c *applicationsAPIClient) GenerateAppPassword(ctx context.Context, in *GenerateAppPasswordRequest, opts ...grpc.CallOption) (*GenerateAppPasswordResponse, error) {
	out := new(GenerateAppPasswordResponse)
	err := c.cc.Invoke(ctx, "/cs3.auth.applications.v1beta1.ApplicationsAPI/GenerateAppPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsAPIClient) ListAppPasswords(ctx context.Context, in *ListAppPasswordsRequest, opts ...grpc.CallOption) (*ListAppPasswordsResponse, error) {
	out := new(ListAppPasswordsResponse)
	err := c.cc.Invoke(ctx, "/cs3.auth.applications.v1beta1.ApplicationsAPI/ListAppPasswords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsAPIClient) InvalidateAppPassword(ctx context.Context, in *InvalidateAppPasswordRequest, opts ...grpc.CallOption) (*InvalidateAppPasswordResponse, error) {
	out := new(InvalidateAppPasswordResponse)
	err := c.cc.Invoke(ctx, "/cs3.auth.applications.v1beta1.ApplicationsAPI/InvalidateAppPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationsAPIClient) GetAppPassword(ctx context.Context, in *GetAppPasswordRequest, opts ...grpc.CallOption) (*GetAppPasswordResponse, error) {
	out := new(GetAppPasswordResponse)
	err := c.cc.Invoke(ctx, "/cs3.auth.applications.v1beta1.ApplicationsAPI/GetAppPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApplicationsAPIServer is the server API for ApplicationsAPI service.
type ApplicationsAPIServer interface {
	// GenerateAppPassword creates a password with specified scope to be used by
	// third-party applications.
	GenerateAppPassword(context.Context, *GenerateAppPasswordRequest) (*GenerateAppPasswordResponse, error)
	// ListAppPasswords lists the application passwords created by a user.
	ListAppPasswords(context.Context, *ListAppPasswordsRequest) (*ListAppPasswordsResponse, error)
	// InvalidateAppPassword invalidates a generated password.
	InvalidateAppPassword(context.Context, *InvalidateAppPasswordRequest) (*InvalidateAppPasswordResponse, error)
	// GetAppPassword retrieves the password information by the combination of username and password.
	GetAppPassword(context.Context, *GetAppPasswordRequest) (*GetAppPasswordResponse, error)
}

// UnimplementedApplicationsAPIServer can be embedded to have forward compatible implementations.
type UnimplementedApplicationsAPIServer struct {
}

func (*UnimplementedApplicationsAPIServer) GenerateAppPassword(ctx context.Context, req *GenerateAppPasswordRequest) (*GenerateAppPasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateAppPassword not implemented")
}
func (*UnimplementedApplicationsAPIServer) ListAppPasswords(ctx context.Context, req *ListAppPasswordsRequest) (*ListAppPasswordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAppPasswords not implemented")
}
func (*UnimplementedApplicationsAPIServer) InvalidateAppPassword(ctx context.Context, req *InvalidateAppPasswordRequest) (*InvalidateAppPasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvalidateAppPassword not implemented")
}
func (*UnimplementedApplicationsAPIServer) GetAppPassword(ctx context.Context, req *GetAppPasswordRequest) (*GetAppPasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppPassword not implemented")
}

func RegisterApplicationsAPIServer(s *grpc.Server, srv ApplicationsAPIServer) {
	s.RegisterService(&_ApplicationsAPI_serviceDesc, srv)
}

func _ApplicationsAPI_GenerateAppPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateAppPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsAPIServer).GenerateAppPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.auth.applications.v1beta1.ApplicationsAPI/GenerateAppPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsAPIServer).GenerateAppPassword(ctx, req.(*GenerateAppPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationsAPI_ListAppPasswords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAppPasswordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsAPIServer).ListAppPasswords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.auth.applications.v1beta1.ApplicationsAPI/ListAppPasswords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsAPIServer).ListAppPasswords(ctx, req.(*ListAppPasswordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationsAPI_InvalidateAppPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvalidateAppPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsAPIServer).InvalidateAppPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.auth.applications.v1beta1.ApplicationsAPI/InvalidateAppPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsAPIServer).InvalidateAppPassword(ctx, req.(*InvalidateAppPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationsAPI_GetAppPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationsAPIServer).GetAppPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.auth.applications.v1beta1.ApplicationsAPI/GetAppPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationsAPIServer).GetAppPassword(ctx, req.(*GetAppPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApplicationsAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cs3.auth.applications.v1beta1.ApplicationsAPI",
	HandlerType: (*ApplicationsAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateAppPassword",
			Handler:    _ApplicationsAPI_GenerateAppPassword_Handler,
		},
		{
			MethodName: "ListAppPasswords",
			Handler:    _ApplicationsAPI_ListAppPasswords_Handler,
		},
		{
			MethodName: "InvalidateAppPassword",
			Handler:    _ApplicationsAPI_InvalidateAppPassword_Handler,
		},
		{
			MethodName: "GetAppPassword",
			Handler:    _ApplicationsAPI_GetAppPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cs3/auth/applications/v1beta1/applications_api.proto",
}
